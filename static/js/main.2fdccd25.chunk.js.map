{"version":3,"sources":["Task.js","statistic.js","Rating.js","Review.js","newTask.js","Taskview.js","App.js","serviceWorker.js","index.js","img/welcome_card.jpg"],"names":["Task","this","props","nodirect","_this$props","error","isLoaded","things","react_default","a","createElement","style","margin","width","message","length","Link","to","onClick","onNew","lib","id","colored","ripple","position","bottom","right","name","className","shadow","rows","slice","reverse","cellFormatter","title","substring","tooltip","_id","rating","backgroundColor","concat","color","Component","Statistic","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","begin","good","bad","unrated","limit","_this2","fetch","then","res","json","result","setState","filter","thing","wip","done","_this$state","data","labels","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","yAxes","ticks","beginAtZero","fontSize","fontColor","min","max","gridLines","display","xAxes","layout","padding","left","top","legend","textAlign","expand","backgroundImage","es","height","weight","Rating","content","toTasklist","border","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","preventDefault","onRead","method","headers","Accept","Content-Type","body","JSON","stringify","onUpdate","onSubmit","type","required","defaultChecked","onChange","marginLeft","marginTop","React","Review","creatCard","i","j","cellRow","el","undefined","location","sort","b","toConsumableArray","t","map","key","borderRadius","marginRight","background","paddingLeft","textTransform","updatedAt","src_Rating","push","f","maxWidth","CreateNew","onAdd","onTitleChange","onContentChange","Redirect","welcomecard","form","Taskview","reviewHandler","toReview","url","match","params","_this3","pathname","createdAt","onDelete","raised","accent","App","updateRating","item","remain","handleDirect","handleDelete","handleAdd","handleTitleChange","handleContentChange","BrowserRouter","borderBottom","scroll","text","Route","exact","path","render","src_Task","assign","newTask","src_Review","component","src_Taskview","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","querySelector","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2fdccd25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Chip,\n  FABButton,\n  Icon,\n  Spinner,\n  DataTable,\n  TableHeader\n} from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\n\nclass Task extends Component {\n  componentDidMount() {\n    this.props.nodirect();\n  }\n\n  render() {\n    const { error, isLoaded, things } = this.props;\n\n    if (error) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          Error: {error.message}\n        </div>\n      );\n    } else if (!isLoaded) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          <Spinner />\n        </div>\n      );\n    } else if (things.length === 0) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          No task. Please create one.\n          <Link to=\"/create\" onClick={this.props.onNew}>\n            <FABButton\n              id=\"plus\"\n              colored\n              ripple\n              style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}\n            >\n              <Icon name=\"add\" />\n            </FABButton>\n          </Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"task\">\n          <h4>The list of all tasks.</h4>\n\n          <DataTable id=\"tasklist\" shadow={0} rows={things.slice(0).reverse()}>\n            <TableHeader\n              name=\"title\"\n              cellFormatter={title =>\n                title.length >= 8 ? title.substring(0, 8) + \"...\" : title\n              }\n              tooltip=\"The task name\"\n            >\n              Task\n            </TableHeader>\n            <TableHeader\n              name=\"_id\"\n              cellFormatter={_id => <Link to={\"/task/\" + _id}>Check</Link>}\n              tooltip=\"The details of the task.\"\n            >\n              Details\n            </TableHeader>\n            <TableHeader\n              name=\"rating\"\n              cellFormatter={rating => (\n                <Chip\n                  style={{\n                    backgroundColor: `${\n                      rating === 1\n                        ? \"#48B7ED\"\n                        : rating === 2\n                        ? \"#7ED450\"\n                        : rating === 3\n                        ? \"#6450D4\"\n                        : \"#FF6268\"\n                    }`,\n                    color: \"white\"\n                  }}\n                >\n                  {rating === 1\n                    ? \"Begin\"\n                    : rating === 2\n                    ? \"WIP\"\n                    : rating === 3\n                    ? \"Done\"\n                    : \"Not started\"}\n                </Chip>\n              )}\n              tooltip=\"Status of the tasks\"\n            >\n              Status\n            </TableHeader>\n          </DataTable>\n\n          <Link to=\"/create\" onClick={this.props.onNew}>\n            <FABButton\n              id=\"plus\"\n              colored\n              ripple\n              style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}\n            >\n              <Icon name=\"add\" />\n            </FABButton>\n          </Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Task;\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card, CardTitle, CardText, Spinner } from \"react-mdl\";\n\nclass Statistic extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      things: [],\n      begin: 0,\n      good: 0,\n      bad: 0,\n      unrated: 0,\n      limit: 10\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://floating-bastion-48526.herokuapp.com/api/tasks\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            things: result,\n            begin: result.filter(thing => thing.rating === 1).length,\n            wip: result.filter(thing => thing.rating === 2).length,\n            done: result.filter(thing => thing.rating === 3).length,\n            unrated: result.filter(thing => thing.rating === null).length,\n            limit: result.length\n          });\n        },\n\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, things, begin, wip, done, unrated } = this.state;\n\n    const data = {\n      labels: [\"Todo\", \"Start\", \"WIP\", \"Done\"],\n      datasets: [\n        {\n          label: \"My tasks\",\n          backgroundColor: \"rgba(255, 255, 255, 1)\",\n          borderColor: \"rgba(255, 255, 255, 1)\",\n          borderWidth: 0,\n          hoverBackgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          hoverBorderColor: \"rgba(255, 255, 255, 0.9)\",\n          data: [unrated, begin, wip, done]\n        }\n      ]\n    };\n\n    const options = {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              fontSize: 13,\n              fontColor: \"#fff\",\n              min: 0,\n              max: this.state.limit\n            },\n            gridLines: { display: false }\n          }\n        ],\n        xAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              fontSize: 13,\n              fontColor: \"#fff\",\n              min: 0,\n              max: 6\n            },\n            gridLines: { display: false }\n          }\n        ]\n      },\n\n      layout: {\n        padding: {\n          left: 10,\n          right: 0,\n          top: 0,\n          bottom: 0\n        }\n      },\n      legend: {\n        labels: {\n          fontColor: \"#fff\"\n        }\n      },\n      title: {\n        fontColor: \"#fff\"\n      }\n    };\n\n    if (error) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          Error: {error.message}\n        </div>\n      );\n    } else if (!isLoaded) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          <Spinner />\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{\n            width: \"80%\",\n            margin: \"30px auto\",\n            textAlign: \"center\"\n          }}\n        >\n          <h4>This is an assessment of tasks</h4>\n          <Card id=\"stats\" shadow={0} style={{ margin: \"auto\" }}>\n            <CardTitle\n              expand\n              style={{\n                color: \"#fff\",\n                backgroundImage:\n                  \"linear-gradient(to bottom right, #A471E1, #6C77E1)\"\n              }}\n            >\n              <div className=\"barChart\">\n                <Bar data={data} width={50} height={50} options={options} />\n              </div>\n            </CardTitle>\n            <CardText\n              style={{ textAlign: \"left\", height: \"120px\", color: \"#CDCDCD\" }}\n            >\n              {begin} {begin > 1 ? \"tasks get\" : \"task gets\"} started. There{\" \"}\n              {wip > 1 ? \"are\" : \"is\"} {wip} {wip > 1 ? \"tasks\" : \"task\"} in\n              process, and {unrated} {unrated > 1 ? \"tasks have\" : \"task has\"}{\" \"}\n              not been started. {done === 0 ? \"None\" : done}{\" \"}\n              {done > 1 ? \"tasks have\" : \" task has\"} been finished.\n              <br />\n              <h3 style={{ weight: \"bold\", color: \"#787878\" }}>\n                {things.length} Tasks\n              </h3>\n              <br />\n            </CardText>\n          </Card>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Statistic;\n","import React from \"react\";\nimport { Button, Chip } from \"react-mdl\";\nimport \"./style/rating.css\";\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: this.props.rating,\n      message:\n        this.props.rating === 1\n          ? \"\"\n          : this.props.rating === 2\n          ? \"\"\n          : this.props.rating === 3\n          ? \"\"\n          : \"Not started yet.\",\n      title: this.props.title,\n      content: this.props.content,\n      toTasklist: false,\n      style: { border: \"0px solid #6873D0\", backgroundColor: \"#FFF\", color: \"#6873D0\"  }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.rating === null || this.props.rating === \"\") {\n      this.setState({\n        style: { backgroundColor: \"#FFF\", border: \"1px solid #FF7377\", color: \"#FF7377\" }\n      });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      rating: event.target.value,\n      style: { border: \"1px solid #9168D0\", backgroundColor: \"#FFF\", color: \"#9168D0\"  },\n      message: \"Please save your update.\"\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if(this.props.rating === null){\n      this.props.onRead(this.state.rating);\n      }\n    this.setState({\n      message: \"You have updated the status successfully.\",\n      style: { backgroundColor: \"#FFF\", border: \"1px solid #68D091\", color: \"#68D091\" }\n    });\n    fetch(\n      \"https://floating-bastion-48526.herokuapp.com/api/tasks/\" + this.props.id,\n      {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          content: this.state.content,\n          rating: this.state.rating\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(result => {\n        this.props.onUpdate(result);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"rating\">\n      <form onSubmit={this.handleSubmit}>\n      <Chip style={this.state.style}>{this.state.message}</Chip> <br />\n        <br />\n        <label className=\"container\">BEGIN\n        <input\n          type=\"radio\"\n          name=\"status\"\n          required\n          value=\"1\"\n          defaultChecked={this.props.rating === 1}\n          onChange={this.handleChange}\n        />\n         <span className=\"checkmark\" style={{marginLeft: \"10px\"}}/>\n         </label>\n           <label className=\"container\">WIP\n        <input\n          type=\"radio\"\n          name=\"status\"\n          value=\"2\"\n          defaultChecked={this.props.rating === 2}\n          onChange={this.handleChange}\n        />\n         <span className=\"checkmark\" style={{marginLeft: \"10px\"}}/>\n         </label>\n         <label className=\"container\">DONE\n        <input\n          type=\"radio\"\n          name=\"status\"\n          value=\"3\"\n          defaultChecked={this.props.rating === 3}\n          onChange={this.handleChange}\n        />\n        <span className=\"checkmark\" style={{marginLeft: \"10px\"}}/>\n        </label>\n        <br/>\n    <Button id=\"save\" style={{marginTop: \"20px\"}}>Save</Button>\n      </form>\n\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport {\n  Icon,\n  Spinner,\n  CardTitle,\n  CardText,\n  CardActions,\n  Card\n} from \"react-mdl\";\nimport \"./style/task.css\";\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      things: props.things,\n      unrated: props.things.filter(f => f.rating === null).length\n    };\n  }\n\n  creatCard = () => {\n    var cellRow = [];\n    var i,\n      j,\n      temparray,\n      chunk = 3;\n    for (i = 0, j = this.state.things.length; i < j; i += chunk) {\n      if (this.props.location.state === undefined) {\n        temparray = this.state.things\n          .sort((a, b) => a.rating - b.rating)\n          .slice(i, i + chunk);\n      } else {\n        temparray = [\n          this.props.location.state.thing,\n          ...this.state.things.filter(\n            t => t._id !== this.props.location.state.thing._id\n          )\n        ].slice(i, i + chunk);\n      }\n      const el = temparray.map(thing => (\n        <Card\n          id=\"taskcard\"\n          key={thing._id}\n          style={{\n            borderRadius: \"7px\",\n            marginLeft: \"8px\",\n            marginRight: \"18px\"\n          }}\n        >\n          <CardTitle\n            expand\n            style={{\n              color: \"#00A1FB\",\n              background: \"#FFFFFF\"\n            }}\n          >\n            <Icon name=\"assignment\" style={{ marginRight: \"9px\" }} />\n            {thing.title.length >= 30\n              ? thing.title.substring(0, 30) + \"...\"\n              : thing.title}\n          </CardTitle>\n          <span\n            style={{\n              color: \"#C0C0C0\",\n              textAlign: \"left\",\n              paddingLeft: \"18px\",\n              fontSize: \"12px\",\n              textTransform: \"uppercase\"\n            }}\n          >\n            Last Update: {thing.updatedAt.substring(0, 10)}\n          </span>\n          <CardText\n            style={{\n              color: \"#2F494F\",\n              background: \"#fff\",\n              textAlign: \"left\",\n              height: \"120px\",\n              paddingLeft: \"18px\"\n            }}\n          >\n            {thing.content.length >= 290\n              ? thing.content.substring(0, 290) + \"...\"\n              : thing.content}\n          </CardText>\n          <CardActions>\n            <Rating\n              name={thing.title}\n              rating={thing.rating}\n              id={thing._id}\n              title={thing.title}\n              content={thing.content}\n              onUpdate={this.props.onUpdate}\n              onRead={this.props.onRead}\n            />\n          </CardActions>\n        </Card>\n      ));\n      cellRow.push(el);\n    }\n    return cellRow;\n  };\n\n  componentWillUnmount() {\n    this.setState({\n      things: [],\n      unrated: 0\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://floating-bastion-48526.herokuapp.com/api/tasks\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            things: result,\n            unrated: result.filter(thing => thing.rating === null).length\n          });\n        },\n\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n\n    if (error) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          Error: {error.message}\n        </div>\n      );\n    } else if (!isLoaded) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          <Spinner />\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className=\"feedback\"\n          style={{\n            margin: \"30px auto\",\n            maxWidth: \"80%\",\n            textAlign: \"center\"\n          }}\n        >\n          <h4>Update the status of tasks</h4>\n          {this.creatCard()}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Review;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  CardActions,\n  Textfield,\n  CardTitle,\n  Card,\n  CardText\n} from \"react-mdl\";\nimport \"./style/Home.css\";\nimport welcomecard from \"./img/welcome_card.jpg\";\n\nclass CreateNew extends Component {\n  render() {\n    const { toTasklist, onAdd, onTitleChange, onContentChange } = this.props;\n\n    if (toTasklist === true) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"welcome\">\n        <h4>Please add a new task</h4>\n        <Card id=\"welcome\" style={{ margin: \"auto\" }}>\n          <CardTitle\n            style={{\n              color: \"#fff\",\n              height: \"176px\",\n              background: `url(${welcomecard}) left / cover`\n            }}\n          >\n            New task\n          </CardTitle>\n          <CardText />\n          <form id=\"task\" onSubmit={onAdd}>\n            <Textfield\n              onChange={onTitleChange}\n              label=\"Task Name\"\n              id=\"name\"\n              style={{ width: \"200px\" }}\n            />\n            <br />\n            <Textfield\n              onChange={onContentChange}\n              label=\"Task Content\"\n              rows={3}\n              style={{ width: \"200px\" }}\n            />\n            <br />\n          </form>\n\n          <CardActions>\n            <Button id=\"create\" type=\"submit\" form=\"task\" value=\"Submit\">\n              Add\n            </Button>\n          </CardActions>\n          <br />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CreateNew;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from \"react-mdl\";\n\nclass Taskview extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      thing: null,\n      toReview: false\n    };\n  }\n\n  componentDidMount() {\n    let url =\n      \"https://floating-bastion-48526.herokuapp.com/api/tasks/\" +\n      this.props.match.params.id;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            thing: result\n          });\n        },\n\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  reviewHandler = event => {\n    this.setState({\n      toReview: true\n    });\n  };\n\n  render() {\n    const { error, isLoaded, thing, toReview } = this.state;\n    const { toTasklist } = this.props;\n\n    if (toTasklist) {\n      return <Redirect to=\"/\" />;\n    } else if (toReview) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/review\",\n            state: { thing: thing }\n          }}\n        />\n      );\n    } else if (error) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>\n          Error: {error.message}\n        </div>\n      );\n    } else if (!isLoaded) {\n      return (\n        <div style={{ margin: \"300px auto\", width: \"200px\" }}>Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"taskview\">\n          <h2>{thing.title}</h2>\n          <h4>\n            Created At: {thing.createdAt.substring(0, 10)} | Updated At:{\" \"}\n            {thing.updatedAt.substring(0, 10)}\n          </h4>\n          <h4>\n            Status:{\" \"}\n            {thing.rating === 1\n              ? \"Begin\"\n              : thing.rating === 2\n              ? \"WIP\"\n              : thing.rating === 3\n              ? \"Done\"\n              : \"Not started\"}\n          </h4>\n          <br />\n          <p>{thing.content}</p>\n          <hr />\n          <Button\n            id=\"delete\"\n            onClick={() => this.props.onDelete(thing)}\n            raised\n            ripple\n            accent\n          >\n            Delete\n          </Button>{\" \"}\n          <Button\n            id=\"updatestatus\"\n            onClick={this.reviewHandler}\n            raised\n            colored\n            ripple\n            style={{ marginLeft: \"10px\" }}\n          >\n            Update Status\n          </Button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Taskview;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./style/App.css\";\nimport Task from \"./Task\";\nimport Statistic from \"./statistic\";\nimport Review from \"./Review\";\nimport { Drawer, Icon, Badge, Layout, Header, Navigation } from \"react-mdl\";\nimport CreateNew from \"./newTask\";\nimport Taskview from \"./Taskview\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      unrated: null,\n      title: null,\n      content: null,\n      toTasklist: false,\n      isLoaded: false,\n      things: [],\n      thing: null\n    };\n  }\n\n  onRead = () => {\n    this.setState({ unrated: this.state.unrated - 1 });\n  };\n\n  updateRating = item => {\n    const remain = this.state.things.filter(t => t._id !== item._id);\n    this.setState({ things: [...remain, item] });\n  };\n\n  handleDirect = event => {\n    this.setState({ toTasklist: false });\n  };\n\n  handleDelete = thing => {\n    if (thing.rating === null) {\n      this.onRead();\n    }\n\n    const things = this.state.things.filter(t => t._id !== thing._id);\n    this.setState({\n      toTasklist: true,\n      things: things\n    });\n    fetch(\n      \"https://floating-bastion-48526.herokuapp.com/api/tasks/\" + thing._id,\n      {\n        method: \"DELETE\"\n      }\n    );\n  };\n\n  handleAdd = event => {\n    event.preventDefault();\n    fetch(\"https://floating-bastion-48526.herokuapp.com/api/tasks/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        content: this.state.content\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        const things = [...this.state.things, result];\n        this.setState({\n          isLoaded: true,\n          things: things,\n          unrated: things.filter(thing => thing.rating === null).length,\n          toTasklist: true\n        });\n      });\n  };\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleContentChange = event => {\n    this.setState({ content: event.target.value });\n  };\n\n  componentWillUnmount() {\n    this.setState({ toTasklist: false });\n  }\n\n  componentDidMount() {\n    fetch(\"https://floating-bastion-48526.herokuapp.com/api/tasks\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            things: result,\n            unrated: result.filter(thing => thing.rating === null).length\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      unrated,\n      toTasklist,\n      things,\n      thing,\n      title,\n      content\n    } = this.state;\n\n    return (\n      <Router>\n        <div id=\"Nav\">\n          <Layout>\n            <Header\n              title=\"{ Tasks Tracker }\"\n              style={{\n                color: \"#8DA9B0\",\n                background: \"#fff\",\n                borderBottom: \"1px solid #E3EDF0\"\n              }}\n              scroll\n            >\n              <Navigation>\n                <Link to=\"/\">Tasks</Link>\n                <Link to=\"/create\">Create</Link>\n                <Link to=\"/review\">\n                  <Badge\n                    text={\n                      this.state.unrated === null || this.state.unrated === 0\n                        ? null\n                        : this.state.unrated\n                    }\n                  >\n                    Update Status\n                  </Badge>\n                </Link>\n                <Link to=\"/statistic\">\n                  <Icon name=\"assessment\" style={{ marginRight: 10 }} />\n                  Statistic\n                </Link>\n              </Navigation>\n            </Header>\n\n            <Drawer id=\"sidebar\" title=\"{ Tasks Tracker }\">\n              <Navigation>\n                <Link to=\"/\">\n                  <Icon name=\"assignment\" />\n                  Tasks\n                </Link>\n                <Link to=\"/create\">\n                  <Icon name=\"add_circle\" />\n                  Create\n                </Link>\n                <Link to=\"/review\">\n                  <Icon name=\"new_releases\" />\n                  <Badge\n                    text={\n                      this.state.unrated === null || this.state.unrated === 0\n                        ? null\n                        : this.state.unrated\n                    }\n                  >\n                    Update\n                  </Badge>\n                </Link>\n                <Link to=\"/statistic\">\n                  <Icon name=\"assessment\" />\n                  Statistic\n                </Link>\n              </Navigation>\n            </Drawer>\n\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Task\n                  {...props}\n                  error={error}\n                  isLoaded={isLoaded}\n                  things={things}\n                  toTasklist={toTasklist}\n                  nodirect={this.handleDirect}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/create\"\n              render={props => (\n                <CreateNew\n                  {...props}\n                  error={error}\n                  isLoaded={isLoaded}\n                  title={title}\n                  content={content}\n                  things={things}\n                  toTasklist={toTasklist}\n                  onAdd={this.handleAdd}\n                  onTitleChange={this.handleTitleChange}\n                  onContentChange={this.handleContentChange}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/review\"\n              render={props => (\n                <Review\n                  {...props}\n                  unrated={unrated}\n                  things={things}\n                  thing={thing}\n                  onRead={this.onRead}\n                  onUpdate={this.updateRating}\n                />\n              )}\n            />\n\n            <Route path=\"/statistic\" component={Statistic} />\n\n            <Route\n              path=\"/task/:id\"\n              render={props => (\n                <Taskview\n                  {...props}\n                  onDelete={this.handleDelete}\n                  things={things}\n                  toTasklist={toTasklist}\n                />\n              )}\n            />\n          </Layout>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'), document.querySelector('#app'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/welcome_card.7edb812a.jpg\";"],"sourceRoot":""}